{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import Koa from \"koa\";\nimport Router, { RouterContext } from 'koa-router';\nimport logger from 'koa-logger';\nimport json from 'koa-json';\nimport bodyParser from \"koa-bodyparser\";\nimport { CustomErrorMessageFunction, query, body, validationResults } from \"koa-req-validation\";\n\nimport { filmList } from \"./filmList\";\n\nconst app: Koa = new Koa();\nconst router: Router = new Router();\n\nconst customErrorMessage: CustomErrorMessageFunction = (\n  _ctx: RouterContext,\n  value: string) => {\n  return (\n    `The name must be between 3 and 20 ` +\n    `characters long but received length ${value.length}`\n  )\n}\n\nconst validatorName = [\n  body(\"name\").isLength({\n    min: 3\n  }).optional().withMessage(customErrorMessage).build(),\n  body(\"film\").isLength({\n    min: 3\n  }).withMessage(customErrorMessage).build(),\n  // body(\"id\").isInt({ min: 10000, max: 20000 }).build()\n]\n\n// Set up endpoint\nrouter.get('/',\n  query(\"name\")\n    .isLength({ min: 3 })\n    .withMessage(customErrorMessage)\n    .build(),\n  async (ctx: RouterContext, next: any) => {\n    // ctx.body = { msg: 'Hello World!' };\n    const result = validationResults(ctx);\n    if (result.hasErrors()) {\n      ctx.status = 422;\n      ctx.body = { err: result.mapped() }\n    } else {\n      ctx.body = { msg: `Hello world! ${ctx.query.name}` };\n    }\n\n    await next();\n  })\n\nrouter.post('/', async (ctx: RouterContext, next: any) => {\n  const data = ctx.request.body;\n  ctx.body = data;\n  await next();\n})\n\nrouter.get('/films', async (ctx: RouterContext, next: any) => {\n  ctx.body = { movie: filmList };\n  await next();\n})\n\nrouter.post('/films',\n  ...validatorName,\n  async (ctx: RouterContext, next: any) => {\n    const result = validationResults(ctx);\n    if (result.hasErrors()) {\n      ctx.status = 422;\n      ctx.body = { err: result.mapped() }\n    } else {\n      const data: any = ctx.request.body;\n      const newId = filmList.length + 1;\n      if (data.film) filmList.push({ id: newId, name: data.film })\n\n      ctx.body = { msg: 'film added' };\n    }\n\n    await next();\n  })\n\nrouter.get('/film/:id', async (ctx: RouterContext, next: any) => {\n  const id: number = +ctx.params.id;\n  ctx.status = 404;\n  film.forEach((f) => {\n    if (f.id == id) {\n      // replace the data\n      ctx.status = 200;\n    }\n  })\n  ctx.body = resBody;\n  await next()\n});\n\n// End of endpoint set up\n\n\n// other plug-ins\napp.use(json());\napp.use(logger());\napp.use(bodyParser());\napp.use(router.routes()).use(router.allowedMethods());\napp.use(async (ctx: RouterContext, next: any) => {\n  try {\n    await next();\n    if (ctx.status === 404)\n      ctx.body = { err: \"No such endpoint existed\" }\n  }\n  catch {\n\n  }\n})\n\n// Start Koa\napp.listen(10888, () => {\n  console.log(\"Koa started\");\n})"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,iBAAgB;AAChB,wBAAsC;AACtC,wBAAmB;AACnB,sBAAiB;AACjB,4BAAuB;AACvB,gCAA2E;AAE3E,sBAAyB;AAEzB,MAAM,MAAW,IAAI,WAAAA,QAAI;AACzB,MAAM,SAAiB,IAAI,kBAAAC,QAAO;AAElC,MAAM,qBAAiD,CACrD,MACA,UAAkB;AAClB,SACE,yEACuC,MAAM;AAEjD;AAEA,MAAM,gBAAgB;AAAA,MACpB,gCAAK,MAAM,EAAE,SAAS;AAAA,IACpB,KAAK;AAAA,EACP,CAAC,EAAE,SAAS,EAAE,YAAY,kBAAkB,EAAE,MAAM;AAAA,MACpD,gCAAK,MAAM,EAAE,SAAS;AAAA,IACpB,KAAK;AAAA,EACP,CAAC,EAAE,YAAY,kBAAkB,EAAE,MAAM;AAE3C;AAGA,OAAO;AAAA,EAAI;AAAA,MACT,iCAAM,MAAM,EACT,SAAS,EAAE,KAAK,EAAE,CAAC,EACnB,YAAY,kBAAkB,EAC9B,MAAM;AAAA,EACT,OAAO,KAAoB,SAAc;AAEvC,UAAM,aAAS,6CAAkB,GAAG;AACpC,QAAI,OAAO,UAAU,GAAG;AACtB,UAAI,SAAS;AACb,UAAI,OAAO,EAAE,KAAK,OAAO,OAAO,EAAE;AAAA,IACpC,OAAO;AACL,UAAI,OAAO,EAAE,KAAK,gBAAgB,IAAI,MAAM,OAAO;AAAA,IACrD;AAEA,UAAM,KAAK;AAAA,EACb;AAAC;AAEH,OAAO,KAAK,KAAK,OAAO,KAAoB,SAAc;AACxD,QAAM,OAAO,IAAI,QAAQ;AACzB,MAAI,OAAO;AACX,QAAM,KAAK;AACb,CAAC;AAED,OAAO,IAAI,UAAU,OAAO,KAAoB,SAAc;AAC5D,MAAI,OAAO,EAAE,OAAO,yBAAS;AAC7B,QAAM,KAAK;AACb,CAAC;AAED,OAAO;AAAA,EAAK;AAAA,EACV,GAAG;AAAA,EACH,OAAO,KAAoB,SAAc;AACvC,UAAM,aAAS,6CAAkB,GAAG;AACpC,QAAI,OAAO,UAAU,GAAG;AACtB,UAAI,SAAS;AACb,UAAI,OAAO,EAAE,KAAK,OAAO,OAAO,EAAE;AAAA,IACpC,OAAO;AACL,YAAM,OAAY,IAAI,QAAQ;AAC9B,YAAM,QAAQ,yBAAS,SAAS;AAChC,UAAI,KAAK;AAAM,iCAAS,KAAK,EAAE,IAAI,OAAO,MAAM,KAAK,KAAK,CAAC;AAE3D,UAAI,OAAO,EAAE,KAAK,aAAa;AAAA,IACjC;AAEA,UAAM,KAAK;AAAA,EACb;AAAC;AAEH,OAAO,IAAI,aAAa,OAAO,KAAoB,SAAc;AAC/D,QAAM,KAAa,CAAC,IAAI,OAAO;AAC/B,MAAI,SAAS;AACb,OAAK,QAAQ,CAAC,MAAM;AAClB,QAAI,EAAE,MAAM,IAAI;AAEd,UAAI,SAAS;AAAA,IACf;AAAA,EACF,CAAC;AACD,MAAI,OAAO;AACX,QAAM,KAAK;AACb,CAAC;AAMD,IAAI,QAAI,gBAAAC,SAAK,CAAC;AACd,IAAI,QAAI,kBAAAC,SAAO,CAAC;AAChB,IAAI,QAAI,sBAAAC,SAAW,CAAC;AACpB,IAAI,IAAI,OAAO,OAAO,CAAC,EAAE,IAAI,OAAO,eAAe,CAAC;AACpD,IAAI,IAAI,OAAO,KAAoB,SAAc;AAC/C,MAAI;AACF,UAAM,KAAK;AACX,QAAI,IAAI,WAAW;AACjB,UAAI,OAAO,EAAE,KAAK,2BAA2B;AAAA,EACjD,QACA;AAAA,EAEA;AACF,CAAC;AAGD,IAAI,OAAO,OAAO,MAAM;AACtB,UAAQ,IAAI,aAAa;AAC3B,CAAC;",
  "names": ["Koa", "Router", "json", "logger", "bodyParser"]
}
